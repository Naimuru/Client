import React, { useEffect } from 'react';
import { GoogleLogin, GoogleLogout } from 'react-google-login';
import "@/styles/globals.css";
import type { AppProps } from "next/app";
import "bootstrap/dist/css/bootstrap.min.css";
import Head from "next/head";
import { QueryClientProvider, QueryClient } from "react-query";
import { handleGoogleLogin } from '@/utils/auth';

const queryClient = new QueryClient();
const clientId = "714119740864-86bb52urngugkd0t6iorv6cq5rv5ecvm.apps.googleusercontent.com"; // Replace with your actual Google Client ID

export default function App({
  Component,
  pageProps,
}: AppProps) {

  const [isLogged, setIsLogged] = React.useState(false);

  const onSuccess = async (res: any) => {
    console.log('Login Success:', res.profileObj);
    const data = await handleGoogleLogin(res);
    console.log('Backend response:', data);
    setIsLogged(true);
  };

  const onFailure = (res: any) => {
    console.log('Login Failed:', res);
  };

  const onLogout = () => {
    console.log('Logout');
    setIsLogged(false);
  };

  useEffect(() => {
    // Load the 'auth2' library and initialize it
    if (window.gapi) {
      window.gapi.load('auth2', function() {
        window.gapi.auth2.init({
          client_id: clientId,
        });
      });
    }
  }, []);
  
  return (
    <>
      <Head>
        <title>UNFood</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logoUNFoodObj_0.png" />
      </Head>
      <QueryClientProvider client={queryClient}>
        {isLogged ? (
          <GoogleLogout
            clientId={clientId}
            buttonText="Logout"
            onLogoutSuccess={onLogout}
          />
        ) : (
          <GoogleLogin
            clientId={clientId}
            buttonText="Login"
            onSuccess={onSuccess}
            onFailure={onFailure}
            cookiePolicy={'single_host_origin'}
          />
        )}
        <Component {...pageProps} />
      </QueryClientProvider>
    </>
  );
}
